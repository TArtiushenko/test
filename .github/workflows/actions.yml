name: CI

on:
  push:
    branches: [dev]
#    paths-ignore: 
#      - '.github/workflows/**'
    tags:
      - 'v*'
      - 'rc-*'
  pull_request:
    branches: [release, main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_ZONE: europe   # TODO: update to cluster zone
  IMAGE: alpine_main

jobs:
  Setup-build-publish:
    name: Setup, Build, Push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Get image version tag TODO: rename IMAGE_TAG to IMAGE_VERSION
      - name: Get new tag
        uses: ./.github/workflows/get-new-tag

      # Generete tag for docker image
      - name: Docker tag
        id: image-tag
        uses: ./.github/workflows/docker-tag-action
        with:
          project-id: ${{ secrets.GCP_PROJECT }}
          image-name: $IMAGE
          image-version: $IMAGE_TAG
          repository: 'test'
          zone: $GCP_ZONE

      # Build the Docker image with tag for google container registry
      - name: Build
        run: |-
          docker build \
            --tag "${{ steps.image-tag.outputs.gcr-tag }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Send status message depending job.status
      - name: Sending failed message
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Built ${{ env.IMAGE_TAG }} ${{ job.status }}"
          SLACK_COLOR: ${{ job.status }}

      # After successful build add tag
      - name: Update release number
        if: ${{ github.base_ref == 'main' || github.base_ref == 'release' }}
        run: git tag $IMAGE_TAG && git push --tags

      # Push the Docker image to Google Container Registry
      - name: Publish
        uses: ./.github/workflows/push-to-gcr-action
        with: 
          service-account-key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project-id: ${{ secrets.GCP_PROJECT }}
          image: ${{ steps.image-tag.outputs.gcr-tag }}

      # Re-tag image for artifact registry
      - name: Re-tag
        run: docker tag ${{ steps.image-tag.outputs.gcr-tag }} ${{ steps.image-tag.outputs.gar-tag }}

      # Push the Docker image to Google Container Registry
      - name: Publish
        uses: ./.github/workflows/push-to-gar-action
        with: 
          service-account-key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project-id: ${{ secrets.GCP_PROJECT }}
          image: ${{ steps.image-tag.outputs.gar-tag }}
          zone: $GCP_ZONE