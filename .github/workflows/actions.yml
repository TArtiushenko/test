name: CI

on:
  push:
    branches: [dev]
#    paths-ignore: 
#      - '.github/workflows/**'
    tags:
      - 'v*'
      - 'rc-*'
  pull_request:
    branches: [release, main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_ZONE: europe   # TODO: update to cluster zone
  IMAGE: alpine_main

jobs:
  Setup-build-publish:
    name: Setup, Build, Push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Get image prefix
      - name: Get new tag
        uses: ./.github/workflows/get-new-tag

      # Build the Docker image with tag for google container registry
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # On failed build send message to slack shannel
      - name: Sending failed message
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Build failed ${{ env.IMAGE_TAG }}"
          SLACK_COLOR: ${{ job.status }}

      # On success
      - name: Sending success message
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Build successful ${{ env.IMAGE_TAG }}"
          SLACK_COLOR: ${{ job.status }}

      # After successful build add tag
      - name: Update release number
        if: ${{ github.base_ref == 'main' || github.base_ref == 'release' }}
        run: |-
          git tag $IMAGE_TAG && git push --tags

      # Setup gcloud CLI
#      - uses: google-github-actions/setup-gcloud@v0.2.0
#        with:
#          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
#          project_id: ${{ secrets.GCP_PROJECT }}


      # Push the Docker image to Google Container Registry
      - name: Publish
        uses: ./.github/workflows/push-to-gcr-action
        with: 
          service-account-key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project-id: ${{ secrets.GCP_PROJECT }}
          image: $IMAGE
          tag:  $IMAGE_TAG